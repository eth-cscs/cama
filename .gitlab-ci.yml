default:
  tags:
    - rancher-shared

stages:
  # - build
  - dockerize
  - push

variables:
  DOCKER_IMAGE_NAME: "docker/alps/manta-ws"  # Change this to your Docker Hub image name
  DOCKER_REGISTRY: "jfrog.svc.cscs.ch"  # Change this to GitLab's container registry if using that (e.g., registry.gitlab.com)

# Install Rust and build the project
# build_rust_binary:
#   stage: build
#   image: rust:1.84.0  # Use the official Rust Docker image
#   script:
#     - rustup update
#     - cargo build --release  # Build the Rust binary in release mode
#   artifacts:
#     paths:
#       - target/release/your-binary  # Change `your-binary` to the name of your compiled binary

# Build the Docker image
dockerize:
  stage: dockerize
  image: quay.io/podman/stable  # Use the Docker image to run Docker commands

  script:
    - podman version  # Check Docker version to ensure it's available
    - podman build -t $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:latest .  # Build the Docker image
  artifacts:
    paths:
      - Dockerfile  # Optionally keep Dockerfile if needed for later stages

# Push the Docker image to the registry
push_to_registry:
  stage: push
  image: quay.io/podman/stable  # Use the Docker image to run Docker commands
  script:
    - echo "$DOCKER_PASSWORD" | podman login -u "$DOCKER_USERNAME" --password-stdin jfrog.svc.cscs.ch # Login to Docker registry
    - podman push $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:latest  # Push the image to the registry
  only:
    - main  # Only run on main branch (you can adjust this)
